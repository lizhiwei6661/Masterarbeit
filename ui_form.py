# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PySide6 UI code generator
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PySide6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(833, 660)  # 将窗口尺寸修改为833*660
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        
        # 创建中央窗口部件
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        # Create main layout
        self.mainLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.mainLayout.setObjectName("mainLayout")
        self.mainLayout.setContentsMargins(8, 8, 8, 12)  # 减小边距
        self.mainLayout.setSpacing(8)  # 减小间距
        
        # 创建reflectance显示区域
        self.reflectanceGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.reflectanceGroup.setTitle("")
        self.reflectanceGroup.setFlat(True)
        self.reflectanceGroup.setObjectName("reflectanceGroup")
        
        self.reflectanceLayout = QtWidgets.QVBoxLayout(self.reflectanceGroup)
        self.reflectanceLayout.setContentsMargins(0, 0, 0, 0)
        self.reflectanceLayout.setSpacing(5)
        self.reflectanceLayout.setObjectName("reflectanceLayout")
        
        # 添加reflectance视图
        self.view_Reflections = QtWidgets.QGraphicsView(self.reflectanceGroup)
        self.view_Reflections.setObjectName("view_Reflections")
        self.view_Reflections.setMinimumHeight(150)  # 减小最小高度
        # 移除最大高度限制，允许随窗口缩放
        # self.view_Reflections.setMaximumHeight(250)  
        self.view_Reflections.setSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, 
                                          QtWidgets.QSizePolicy.Policy.Expanding)
        self.reflectanceLayout.addWidget(self.view_Reflections)
        
        # 添加"Show Reflections Data"按钮
        self.reflectanceButtonLayout = QtWidgets.QHBoxLayout()
        self.reflectanceButtonLayout.setObjectName("reflectanceButtonLayout")
        self.reflectanceButtonLayout.addStretch()
        
        self.pushButton_show_Reflections_Data = QtWidgets.QPushButton(self.reflectanceGroup)
        self.pushButton_show_Reflections_Data.setObjectName("pushButton_show_Reflections_Data")
        self.reflectanceButtonLayout.addWidget(self.pushButton_show_Reflections_Data)
        
        self.reflectanceLayout.addLayout(self.reflectanceButtonLayout)
        
        # 添加reflectance组到主布局
        self.mainLayout.addWidget(self.reflectanceGroup)
        
        # 创建下半部分布局
        self.bottomLayout = QtWidgets.QHBoxLayout()
        self.bottomLayout.setObjectName("bottomLayout")
        self.bottomLayout.setSpacing(8)  # 减小组件间距
        
        # 左侧CIE视图组 - 减小尺寸
        self.cieGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.cieGroup.setTitle("")
        self.cieGroup.setFlat(True)
        self.cieGroup.setObjectName("cieGroup")
        self.cieGroup.setMinimumWidth(280)  # 进一步减小最小宽度
        self.cieGroup.setMaximumWidth(300)  # 进一步减小最大宽度
        # 添加最大高度限制
        self.cieGroup.setMaximumHeight(320)
        
        self.cieLayout = QtWidgets.QVBoxLayout(self.cieGroup)
        self.cieLayout.setContentsMargins(0, 0, 0, 0)
        self.cieLayout.setSpacing(5)
        self.cieLayout.setObjectName("cieLayout")
        
        # 添加CIE视图 - 调整尺寸
        self.view_colorSpace = QtWidgets.QGraphicsView(self.cieGroup)
        self.view_colorSpace.setObjectName("view_colorSpace")
        self.view_colorSpace.setMinimumSize(QtCore.QSize(200, 200))  # 减小最小尺寸
        # 移除最大尺寸限制，允许随窗口缩放
        # self.view_colorSpace.setMaximumSize(QtCore.QSize(300, 300))
        # 改为允许扩展的尺寸策略
        self.view_colorSpace.setSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, 
                                         QtWidgets.QSizePolicy.Policy.Expanding)
        self.cieLayout.addWidget(self.view_colorSpace)
        
        # 添加"Show CIE Diagram"按钮 - 右对齐
        self.cieButtonLayout = QtWidgets.QHBoxLayout()
        self.cieButtonLayout.setObjectName("cieButtonLayout")
        self.cieButtonLayout.addStretch()
        
        self.pushButton_show_CIE_Data = QtWidgets.QPushButton(self.cieGroup)
        self.pushButton_show_CIE_Data.setObjectName("pushButton_show_CIE_Data")
        self.pushButton_show_CIE_Data.setText("Show CIE Diagram")
        self.cieButtonLayout.addWidget(self.pushButton_show_CIE_Data)
        
        self.cieLayout.addLayout(self.cieButtonLayout)
        
        # 添加CIE组到底部布局，减小比例
        self.bottomLayout.addWidget(self.cieGroup, 1)
        
        # 右侧表格组 - 调整尺寸and策略
        self.tableGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.tableGroup.setTitle("")
        self.tableGroup.setFlat(True)
        self.tableGroup.setObjectName("tableGroup")
        self.tableGroup.setSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)  # 改为固定高度
        self.tableGroup.setMaximumHeight(320)  # 减小最大高度限制
        
        self.tableLayout = QtWidgets.QVBoxLayout(self.tableGroup)
        self.tableLayout.setContentsMargins(0, 0, 0, 0)
        self.tableLayout.setSpacing(5)
        self.tableLayout.setObjectName("tableLayout")
        
        # 添加表格视图 - 设置合理的最大高度
        self.table_results = QtWidgets.QTableWidget(self.tableGroup)
        self.table_results.setObjectName("table_results")
        self.table_results.setColumnCount(6)
        self.table_results.setRowCount(0)
        self.table_results.setMaximumHeight(280)  # 减小表格最大高度
        
        headers = ["CLR", "File Name", "x", "y", "sRGB Linear", "sRGB Gamma"]
        for i, header in enumerate(headers):
            item = QtWidgets.QTableWidgetItem()
            item.setText(header)
            self.table_results.setHorizontalHeaderItem(i, item)
        
        self.table_results.horizontalHeader().setCascadingSectionResizes(False)
        self.table_results.horizontalHeader().setDefaultSectionSize(85)  # 减小默认列宽
        self.table_results.horizontalHeader().setMinimumSectionSize(20)
        self.table_results.verticalHeader().setCascadingSectionResizes(False)
        self.table_results.verticalHeader().setDefaultSectionSize(22)  # 进一步减小默认行高
        
        self.tableLayout.addWidget(self.table_results)
        
        # 添加"Copy to Clipboard"按钮
        self.tableButtonLayout = QtWidgets.QHBoxLayout()
        self.tableButtonLayout.setObjectName("tableButtonLayout")
        self.tableButtonLayout.addStretch()
        
        self.pushButton_copydata = QtWidgets.QPushButton(self.tableGroup)
        self.pushButton_copydata.setObjectName("pushButton_copydata")
        self.tableButtonLayout.addWidget(self.pushButton_copydata)
        
        self.tableLayout.addLayout(self.tableButtonLayout)
        
        # 添加表格组到底部布局，调整比例
        self.bottomLayout.addWidget(self.tableGroup, 2)
        
        # 添加更多的下边距，让整体布局更加平衡
        self.mainLayout.setContentsMargins(8, 8, 8, 12)
        
        # 添加底部布局到主布局
        self.mainLayout.addLayout(self.bottomLayout)
        
        # 设置中央窗口部件
        MainWindow.setCentralWidget(self.centralwidget)
        
        # 创建菜单栏
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 24))
        self.menubar.setObjectName("menubar")
        
        # 创建菜单
        self.menu_file = QtWidgets.QMenu(self.menubar)
        self.menu_file.setObjectName("menu_file")
        self.menu_file.setTitle("File")
        
        self.menu_edit = QtWidgets.QMenu(self.menubar)
        self.menu_edit.setObjectName("menu_edit")
        self.menu_edit.setTitle("Edit")
        
        self.menu_help = QtWidgets.QMenu(self.menubar)
        self.menu_help.setObjectName("menu_help")
        self.menu_help.setTitle("Help")
        
        MainWindow.setMenuBar(self.menubar)
        
        # 创建状态栏
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        
        # 创建操作
        self.actionImport = QtGui.QAction(MainWindow)
        self.actionImport.setObjectName("actionImport")
        self.actionImport.setText("Import...")
        self.actionImport.setShortcut("Ctrl+O")
        
        self.actionExport = QtGui.QAction(MainWindow)
        self.actionExport.setObjectName("actionExport")
        self.actionExport.setText("Export...")
        self.actionExport.setShortcut("Ctrl+E")
        
        self.actionPlot = QtGui.QAction(MainWindow)
        self.actionPlot.setObjectName("actionPlot")
        self.actionPlot.setText("Plot...")
        self.actionPlot.setShortcut("Ctrl+P")
        
        self.actionSettings = QtGui.QAction(MainWindow)
        self.actionSettings.setObjectName("actionSettings")
        self.actionSettings.setText("Settings...")
        self.actionSettings.setShortcut("Ctrl+.")
        self.actionSettings.setMenuRole(QtGui.QAction.MenuRole.NoRole)
        
        self.actionCopy_all_data = QtGui.QAction(MainWindow)
        self.actionCopy_all_data.setObjectName("actionCopy_all_data")
        self.actionCopy_all_data.setText("Copy ALL Data")
        self.actionCopy_all_data.setShortcut("Ctrl+C")
        
        self.actionClear = QtGui.QAction(MainWindow)
        self.actionClear.setObjectName("actionClear")
        self.actionClear.setText("Clear")
        self.actionClear.setShortcut("Ctrl+K")
        
        self.actionAbout = QtGui.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionAbout.setText("About...")
        self.actionAbout.setMenuRole(QtGui.QAction.MenuRole.NoRole)
        
        self.actionManual = QtGui.QAction(MainWindow)
        self.actionManual.setObjectName("actionManual")
        self.actionManual.setText("Manual...")
        
        # 将操作添加到菜单
        self.menu_file.addAction(self.actionImport)
        self.menu_file.addAction(self.actionExport)
        self.menu_file.addAction(self.actionPlot)
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.actionSettings)
        
        self.menu_edit.addAction(self.actionCopy_all_data)
        self.menu_edit.addAction(self.actionClear)
        
        self.menu_help.addAction(self.actionAbout)
        self.menu_help.addAction(self.actionManual)
        
        # 将菜单添加到菜单栏
        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_edit.menuAction())
        self.menubar.addAction(self.menu_help.menuAction())
        
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Aleksameter App"))
        self.pushButton_copydata.setText(_translate("MainWindow", "Copy to Clipboard"))
        self.pushButton_show_Reflections_Data.setText(_translate("MainWindow", "Show Reflections Data"))
        self.pushButton_show_CIE_Data.setText(_translate("MainWindow", "Show CIE Diagram"))
        self.menu_file.setTitle(_translate("MainWindow", "File"))
        self.menu_edit.setTitle(_translate("MainWindow", "Edit"))
        self.menu_help.setTitle(_translate("MainWindow", "Help"))
        self.actionImport.setText(_translate("MainWindow", "Import..."))
        self.actionExport.setText(_translate("MainWindow", "Export..."))
        self.actionPlot.setText(_translate("MainWindow", "Plot..."))
        self.actionSettings.setText(_translate("MainWindow", "Settings..."))
        self.actionCopy_all_data.setText(_translate("MainWindow", "Copy ALL Data"))
        self.actionClear.setText(_translate("MainWindow", "Clear"))
        self.actionAbout.setText(_translate("MainWindow", "About..."))
        self.actionManual.setText(_translate("MainWindow", "Manual..."))
